/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package GUI;

import DAO.UsuarioJpaController;
import DAO.exceptions.NonexistentEntityException;
import bibliotecafusm.Usuario;
import java.awt.Color;
import java.awt.Rectangle;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.persistence.EntityManagerFactory;
import javax.persistence.Persistence;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.border.TitledBorder;
import javax.swing.table.AbstractTableModel;
import javax.swing.table.TableColumnModel;

/**
 *
 * @author Jhon Alex
 */
public class panelRegistroUsuarios extends javax.swing.JPanel{

    
    private UsuarioJpaController usuariojpa;   
    
    private List<Usuario> listaUsuariosdelaBD;
    
    
    
    /**
     * Creates new form panel1
     */
    public panelRegistroUsuarios() {
        initComponents();
        lblupdateicon.setVisible(false);
        
        
        // instancia objeto que va guardar la info a la base de datos :: usuariojpa
        EntityManagerFactory emf = Persistence.createEntityManagerFactory("BibliotecaFUSMPU");
        usuariojpa = new UsuarioJpaController(emf);
        
         // agrega la lista de usuarios de la base de datos a mi atributo lista
        // si la base de datos esta vacia el valor asignado es null
        listaUsuariosdelaBD = usuariojpa.findUsuarioEntities(); 
        
        // asignacion de modelo a tabla
        miTabla.setModel(new ModeloTabla());
        organizatamseccionestabla();
        
        jLabel17.setText(""+usuariojpa.getUsuarioCount());
        
        jTextField1.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent ae) {
                   jButton5ActionPerformed(ae);
            }
        });
        
    }
    
    
    public void organizatamseccionestabla(){
           TableColumnModel cModel = miTabla.getColumnModel();
        cModel.getColumn(2).setPreferredWidth(20);   
        cModel.getColumn(3).setPreferredWidth(5);
        cModel.getColumn(4).setPreferredWidth(120);
    
    }
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        lblupdateicon = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        txtnombres = new javax.swing.JTextField();
        txtapellidos = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        lblcarrera = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        lblcodestu = new javax.swing.JLabel();
        jComboBox1 = new javax.swing.JComboBox<String>();
        txttelefono = new javax.swing.JTextField();
        txtidentificador = new javax.swing.JTextField();
        combocarreras = new javax.swing.JComboBox<String>();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        txtcorreo = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        txtclave = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        miTabla = new javax.swing.JTable();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jLabel9 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jButton5 = new javax.swing.JButton();
        jLabel17 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        setOpaque(false);

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/res/computer-1331579_960_720.png"))); // NOI18N
        jLabel1.setText("     ");

        lblupdateicon.setIcon(new javax.swing.ImageIcon(getClass().getResource("/res/updateicon.png"))); // NOI18N
        lblupdateicon.setText("          ");

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Agregar Nuevo Usuario", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 12), java.awt.Color.blue)); // NOI18N
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        txtnombres.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jPanel1.add(txtnombres, new org.netbeans.lib.awtextra.AbsoluteConstraints(119, 50, 190, -1));

        txtapellidos.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jPanel1.add(txtapellidos, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 50, 190, -1));

        jLabel3.setText("Nombres *");
        jPanel1.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(119, 28, 120, -1));

        jLabel4.setText("Apellidos *");
        jPanel1.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 30, 80, -1));

        jLabel5.setText("Tipo Usuario");
        jPanel1.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(16, 28, 80, -1));

        lblcarrera.setText("Carrera");
        jPanel1.add(lblcarrera, new org.netbeans.lib.awtextra.AbsoluteConstraints(651, 31, 90, -1));

        jLabel7.setText("Tel√©fono");
        jPanel1.add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 90, 60, -1));

        lblcodestu.setText("Cod.  Estudiante *");
        jPanel1.add(lblcodestu, new org.netbeans.lib.awtextra.AbsoluteConstraints(530, 30, 110, -1));

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Estudiante", "Docente", "Admin" }));
        jComboBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox1ActionPerformed(evt);
            }
        });
        jPanel1.add(jComboBox1, new org.netbeans.lib.awtextra.AbsoluteConstraints(16, 50, 85, -1));

        txttelefono.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jPanel1.add(txttelefono, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 110, 90, -1));

        txtidentificador.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jPanel1.add(txtidentificador, new org.netbeans.lib.awtextra.AbsoluteConstraints(528, 50, 110, -1));

        combocarreras.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Administracion", "Contaduria", "Ing. en Sistemas" }));
        jPanel1.add(combocarreras, new org.netbeans.lib.awtextra.AbsoluteConstraints(651, 51, 122, 21));

        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/res/AgregarUsuario.png"))); // NOI18N
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(899, 31, 93, 87));

        jButton2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/res/Icon_List.png"))); // NOI18N
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton2, new org.netbeans.lib.awtextra.AbsoluteConstraints(789, 31, 92, 87));

        txtcorreo.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jPanel1.add(txtcorreo, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 110, 280, -1));

        jLabel10.setText("E-mail *");
        jPanel1.add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 90, 90, -1));

        txtclave.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jPanel1.add(txtclave, new org.netbeans.lib.awtextra.AbsoluteConstraints(510, 110, 130, -1));

        jLabel11.setText("Clave Acceso *");
        jPanel1.add(jLabel11, new org.netbeans.lib.awtextra.AbsoluteConstraints(510, 90, 100, -1));

        jLabel12.setText("Registrar");
        jPanel1.add(jLabel12, new org.netbeans.lib.awtextra.AbsoluteConstraints(920, 130, -1, -1));

        jLabel13.setText("Limpiar Form");
        jPanel1.add(jLabel13, new org.netbeans.lib.awtextra.AbsoluteConstraints(800, 130, -1, -1));

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "                 Usuarios Registrados", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 12), java.awt.Color.blue)); // NOI18N

        miTabla.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane2.setViewportView(miTabla);

        jButton3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/res/sign_up_256.png"))); // NOI18N
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jButton4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/res/EliminarUsuario.png"))); // NOI18N
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jLabel9.setText("Editar");

        jLabel14.setText("Eliminar");

        jLabel15.setText("Ingrese C√©dula Docente / C√≥digo Estudiante >>");

        jButton5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/res/icono_buscar1.png"))); // NOI18N
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        jLabel17.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel17.setForeground(new java.awt.Color(255, 102, 102));

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(73, 73, 73)
                        .addComponent(jLabel17, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(30, 30, 30)
                        .addComponent(jLabel15)
                        .addGap(28, 28, 28)
                        .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 178, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jButton5, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 823, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 40, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jButton4, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(32, 32, 32))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel9)
                        .addGap(58, 58, 58))))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jLabel14)
                .addGap(52, 52, 52))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(11, 11, 11)
                .addComponent(jLabel9)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel14))
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel17, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(jButton5, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel2Layout.createSequentialGroup()
                            .addContainerGap()
                            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jLabel15)
                                .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addGap(9, 9, 9)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 184, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/res/fondo-azul-transparente.png"))); // NOI18N
        jLabel2.setText("                       ");

        jLabel6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/res/fondo-azul-transparente.png"))); // NOI18N
        jLabel6.setText("                       ");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 1010, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(layout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addComponent(jLabel1))
            .addGroup(layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(layout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addComponent(lblupdateicon, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 1050, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 1050, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(180, 180, 180)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(238, 238, 238)
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 260, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 260, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(20, 20, 20)
                                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(10, 10, 10)
                                .addComponent(lblupdateicon)))
                        .addGap(35, 35, 35)
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(0, 0, 0))
        );
    }// </editor-fold>//GEN-END:initComponents

    
    
 Usuario userencontrado = new Usuario();   
    
 
 public boolean casillasenBlanco(){
     boolean salida = false;
     
     if(txtnombres.getText().equals("".trim())){
         salida = true;
     }
     if(txtapellidos.getText().equals("".trim())){
         salida = true;
     }
     if(txtcorreo.getText().equals("".trim())){
         salida = true;
     }
     if(txtclave.getText().equals("".trim())){
         salida = true;
     }
     if(txtidentificador.getText().equals("".trim())){
         salida = true;
     }
     return salida;
 }
 
 
    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed

        
        if (casillasenBlanco()) {
            
           JOptionPane.showMessageDialog(null, "Debe diligenciar todos campos obligatorios");
        }else{
 

    if(jLabel12.getText().equals("Confirmar")){
        
 
     try { 
         
     userencontrado.setNombres(txtnombres.getText().trim());
     userencontrado.setApellidos(txtapellidos.getText().trim());
     
     userencontrado.setCarrera(combocarreras.getSelectedItem().toString());
     userencontrado.setTipoUsuario(jComboBox1.getSelectedItem().toString());
            
        if(!txttelefono.getText().equals("".trim())){
            if((txttelefono.getText().length()<7)||(txttelefono.getText().length()>10)) {
                throw new NumberFormatException();
            }
        }    
            userencontrado.setNumtelefono(txttelefono.getText().trim());
            
     userencontrado.setEmail(txtcorreo.getText().trim());
     userencontrado.setPassword(txtclave.getText().trim());
                  
        // actuliza informacion del usuario
          usuariojpa.edit(userencontrado);
          

          // Notificacion usuario actualizado
      JOptionPane.showMessageDialog(null, "Usuario actualizado");
       setNormalPanelSuperior();
      
      
      txtidentificador.setEnabled(true);
      
                limpiarForm();
                
             // update al final de la edicion
                updateTable();      
                
        //--- seleccion de fila editada------------------------------
        
        int selc =-1;
        
         for (int i = 0; i < listaUsuariosdelaBD.size(); i++) {
            if(listaUsuariosdelaBD.get(i).getIdentificacion().equals(userencontrado.getIdentificacion())){
                selc = i;
                break;
            }
        }

        miTabla.getSelectionModel().setSelectionInterval (selc, selc) ;
        
        Rectangle r = miTabla.getCellRect( selc, 0, true);

        // Mueve el scroll para que el rectangulo sea visible *
        miTabla.scrollRectToVisible (r);
        
        //----------------------------------------------------------------

                activosBntnsPanelUsuarios (true);

      } catch (NumberFormatException nfx) {           
            JOptionPane.showMessageDialog(null, "Error al actulizar usuario, Debes ingresar un numero de telefono valido");
            // Logger.getLogger(panel1.class.getName()).log(Level.SEVERE, null, nfx);       
      } catch (NonexistentEntityException ex) {
          //Logger.getLogger(panel1.class.getName()).log(Level.SEVERE, null, ex);
      } catch (Exception ex) {
            Logger.getLogger(panelRegistroUsuarios.class.getName()).log(Level.SEVERE, null, ex);
      }
     
     
                
     } else{  // REGISTRAR   

        
        try {

            String id = txtidentificador.getText().trim();
            String nombres = txtnombres.getText().trim();
            String apellidos = txtapellidos.getText().trim();
            
            String carrera= combocarreras.getSelectedItem().toString();
            String tipo= jComboBox1.getSelectedItem().toString();
  
            if(!txttelefono.getText().equals("".trim())){
            if((txttelefono.getText().length()<7)||(txttelefono.getText().length()>10)){
                throw new NumberFormatException();
            }}
            String telefono = txttelefono.getText().trim();
            String  email = txtcorreo.getText().trim();
                  
            String password = txtclave.getText().trim();
            

            
            // crea objeto Usuario apartir de la info ingresada en la ventana
            //  Usuario(String identificacion, String nombres, String apellidos, String carrera, String tpuser, int numtelefono, String email, String password) 
            Usuario nuevoUsuario = new Usuario(id, nombres,apellidos,carrera,tipo,telefono,email,password);

            // agrega nuevo usuario a la base de datos
            usuariojpa.create(nuevoUsuario);

            

            JOptionPane.showMessageDialog(null, "Nuevo usuario registrado con Exito");
            limpiarForm();
            
            
            updateTable();
     
        } catch (NumberFormatException nfx) {           
            JOptionPane.showMessageDialog(null, "Error al agregar, Debes ingresar un numero de telefono valido");
            // Logger.getLogger(panel1.class.getName()).log(Level.SEVERE, null, nfx);
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(null, "Error al agregar, El usuario indicado ya se ecuentra registrado");
        
           //Logger.getLogger(panel1.class.getName()).log(Level.SEVERE, null, ex);
        }

      } // fin else  
       
      }
    }//GEN-LAST:event_jButton1ActionPerformed

    
    public void updateTable(){
        
        
        // ACTUALIZACION DE LA TABLA
            // volver asignarle el nuevo valor de la lista de la base de datos
            listaUsuariosdelaBD = usuariojpa.findUsuarioEntities();

            // metodo es diferente ya no es setModel
            // actualiza nuestro modelo actual de la tabla
            ((AbstractTableModel) miTabla.getModel()).fireTableDataChanged();
            
            
            jLabel17.setText(""+usuariojpa.getUsuarioCount());
    }
    
    
    
    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        
        if(jLabel13.getText().equals("Cancelar")){
                   
             setNormalPanelSuperior();
             txtidentificador.setEnabled(true);
        }

        limpiarForm ();
        

    }//GEN-LAST:event_jButton2ActionPerformed

    
    public void setNormalPanelSuperior (){
         jPanel1.setBackground(jPanel2.getBackground());
            
            TitledBorder titulo = new TitledBorder(  "Agregar Usuario" ) ;
            titulo.setTitleColor(Color.BLUE);           
            jPanel1.setBorder( titulo);
            
            lblupdateicon.setVisible(false);

           // reactivar panel inferior
            activosBntnsPanelUsuarios (true);

             txtidentificador.setToolTipText("");
            
   // iconos normales              
        //A√±adimos la imagen al boton agregar que ahora sera actulizar
            ImageIcon confirm = new ImageIcon(getClass().getResource("/res/AgregarUsuario.png"));
            jButton1.setIcon(confirm );
        // cambiamos texto de la etiqueta 
            jLabel12.setText("Registrar");

        //A√±adimos la imagen al boton limpiar que ahora sera cancelar
            ImageIcon cancel = new ImageIcon(getClass().getResource("/res/Icon_List.png"));
            jButton2.setIcon(cancel);
        // cambiamos texto de la etiqueta 
            jLabel13.setText("Limpiar Form");
    }
    
    
    
    private void jComboBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox1ActionPerformed
      
        if(jComboBox1.getSelectedItem().equals("Docente") || jComboBox1.getSelectedItem().equals("Admin")  ){
           
            combocarreras.disable();
            combocarreras.setEnabled(false);
            
            lblcodestu.setText("Cedula *"); 
                  
        }else{
    
            combocarreras.enable();
            combocarreras.setEnabled(true);
            
            lblcodestu.setText("Cod. Estudiante *"); 
        }
        
        
    }//GEN-LAST:event_jComboBox1ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed


// tomar datos del usuario seleccionado

        if (miTabla.getSelectedRow() == -1) {
            JOptionPane.showMessageDialog(null, "Debes seleecionar un usuario a editar");
        
        } else {
            
            String id =String.valueOf(miTabla.getModel().getValueAt(miTabla.getSelectedRow(),2));
   
    if(usuariojpa.findUsuario(id).getIdentificacion().equals("Root") ){
        JOptionPane.showMessageDialog(null,"No se puede editar usuario (Root) administrador principal del sistema");
    }else{         
   
     

     userencontrado = usuariojpa.findUsuario(id);
     
     pasarInfoPanelUpdateUser (userencontrado);
     
     
 
        
        jPanel1.setBorder( new TitledBorder( "         Actualizar Datos Usuario" ) );
        lblupdateicon.setVisible(true);
        jPanel1.setBackground(Color.lightGray);
        
        
       // desactiva txt identificador - este valor no es editable
       txtidentificador.setEnabled(false);
       // asignando tooltip text
       txtidentificador.setToolTipText("Para editar este valor debe eliminar usuario y crearlo nuevamente");
        
        // desactivando elementos panel inferior
        activosBntnsPanelUsuarios (false );
        
        
        //A√±adimos la imagen al boton agregar que ahora sera actulizar
            ImageIcon confirm = new ImageIcon(getClass().getResource("/res/updateUsuario.png"));
            jButton1.setIcon(confirm );
        // cambiamos texto de la etiqueta 
            jLabel12.setText("Confirmar");
            
            
            
        //A√±adimos la imagen al boton limpiar que ahora sera cancelar
            ImageIcon cancel = new ImageIcon(getClass().getResource("/res/cancelar.png"));
            jButton2.setIcon(cancel);
        // cambiamos texto de la etiqueta 
            jLabel13.setText("Cancelar");
            
        } // fin else   
    
        }
    }//GEN-LAST:event_jButton3ActionPerformed

    
    public void pasarInfoPanelUpdateUser (Usuario user){
        
        jComboBox1.setSelectedItem(user.getTipoUsuario());
        
        if(user.getTipoUsuario().equals("Estudiante")){
            combocarreras.setSelectedItem(user.getCarrera());
           
        }
        
        txtnombres.setText(user.getNombres());
        txtapellidos.setText(user.getApellidos());
        txtidentificador.setText(user.getIdentificacion());
        txttelefono.setText(""+user.getNumtelefono());
        txtcorreo.setText(user.getEmail());
        txtclave.setText(user.getPassword());
    }
    
    
    
    public void activosBntnsPanelUsuarios (Boolean val ){
        

        jButton3.setEnabled(val);
        
        jButton4.setEnabled(val);
        
        jButton5.setEnabled(val);
         
        miTabla.setEnabled(val);      
        
       jTextField1.setEnabled(val);  
     
 
    }
    
    
    
    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed

   //aca capturo el id en la pos 2 de la celda seleccionada 

   if(miTabla.getSelectedRow()==-1){
       JOptionPane.showMessageDialog(null,"Debes seleecionar un usuario a eliminar");
   }else{
   
   
     String id =String.valueOf(miTabla.getModel().getValueAt(miTabla.getSelectedRow(),2));
     String nombre =String.valueOf(miTabla.getModel().getValueAt(miTabla.getSelectedRow(),0));
     String apellido =String.valueOf(miTabla.getModel().getValueAt(miTabla.getSelectedRow(),1));
     
    if(usuariojpa.findUsuario(id).getIdentificacion().equals("Root") ){
        JOptionPane.showMessageDialog(null,"No se puede eliminar usuario (Root) administrador principal del sistema");
    }else{ 
        try {
            
            int dialogButton = JOptionPane.YES_NO_OPTION;
            int opc = JOptionPane.showConfirmDialog (null, "¬øEstas seguro de eliminar al usuario "+id+" "+nombre+" ?",
                                                           "AVISO", dialogButton);
           
            // JOptionPane.showMessageDialog(null,"opcion"+opc);
 
            if(opc == 0) {
                usuariojpa.destroy(id);                
                updateTable();
                JOptionPane.showMessageDialog(null,"Usuario eliminado");
            }

        } catch (NonexistentEntityException ex) {
            //Logger.getLogger(panel1.class.getName()).log(Level.SEVERE, null, ex);
        }

    }
   }
    }//GEN-LAST:event_jButton4ActionPerformed

    
    // ACTION BOTON BUSCAR
    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
       

        Usuario user =  usuariojpa.findUsuario(jTextField1.getText().trim());
      
        int selc = -1;
        
        
        if(jTextField1.getText().equals("".trim())){
            JOptionPane.showMessageDialog(null,"Debes digitar un criterio de busqueda ");
        }else  if(user!=null){
        
        
        for (int i = 0; i < listaUsuariosdelaBD.size(); i++) {
            if(listaUsuariosdelaBD.get(i).getIdentificacion().equals(user.getIdentificacion())){
                selc = i;
                break;
            }
        }

      
        miTabla.getSelectionModel().setSelectionInterval (selc, selc) ;
        
        Rectangle r = miTabla.getCellRect( selc, 0, true);

        // Mueve el scroll para que el rectangulo sea visible *
        miTabla.scrollRectToVisible (r);
        
     } else {   
         JOptionPane.showMessageDialog(null,"Usuario no se encuntra registrado");
     
     }
    }//GEN-LAST:event_jButton5ActionPerformed

    

    
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> combocarreras;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JLabel lblcarrera;
    private javax.swing.JLabel lblcodestu;
    private javax.swing.JLabel lblupdateicon;
    private javax.swing.JTable miTabla;
    private javax.swing.JTextField txtapellidos;
    private javax.swing.JTextField txtclave;
    private javax.swing.JTextField txtcorreo;
    private javax.swing.JTextField txtidentificador;
    private javax.swing.JTextField txtnombres;
    private javax.swing.JTextField txttelefono;
    // End of variables declaration//GEN-END:variables


    public void limpiarForm() {
        txtnombres.setText("");
        txtapellidos.setText("");
        txtidentificador.setText("");
        txttelefono.setText("");
        txtcorreo.setText("");
        txtclave.setText("");
     
    }


   // CREANDO MODELO TABLA 

    private class ModeloTabla extends AbstractTableModel { 

        
        
        // cuantas filas tiene la tabla en la base
        @Override
        public int getRowCount() {
            // devuelve la cant objetos - tantos objetos tenga la lista
            return listaUsuariosdelaBD.size();
        }

        // cuantas columnas tiene la tabla en la base
        @Override
        public int getColumnCount() {
            // cuatos items va manejar la lista
            return 5;
        }

        // la informacion de la fila y la informacion de las columnas
        @Override
        public Object getValueAt(int fila, int columna) {

            Usuario nuevoUsuario = listaUsuariosdelaBD.get(fila);

            Object salida = "";

            switch (columna) {
                case 0:
                    
                    salida = nuevoUsuario.getNombres();
                    break;

                case 1:
                    salida = nuevoUsuario.getApellidos();
                    break;

                case 2:
                    salida = nuevoUsuario.getIdentificacion();
                    break;
                    
                case 3:
                    salida = nuevoUsuario.getTipoUsuario();
                    break;

                case 4:
                    salida = nuevoUsuario.getEmail();
                    break;                   
            }

            return salida;

        }

        // nombres de las columnas
        @Override
        public String getColumnName(int columna) {

            switch (columna) {
                case 0:
                    return "NOMBRES";

                case 1:
                    return "APELLIDOS";

                case 2:
                    return "ID / COD EST.";
                    
                case 3:
                    return "USUARIO";

                case 4:
                    return "E-MAIL";    
            }

            return "";


        }

        // ASIGN
        // asigna un valor
        @Override
        public void setValueAt(Object obj, int fila, int columna) {

            Usuario user = listaUsuariosdelaBD.get(fila);
            Object anterior = null;

            switch (columna) {
                case 0:
                    anterior = user.getNombres();
                    user.setNombres((String) obj);
                    break;
                case 1:
                    anterior = user.getApellidos();
                    user.setApellidos((String) obj);
                    break;
                case 4:
                    anterior = user.getEmail();
                    user.setEmail((String) obj);
                    break;    
            }

            try {
                usuariojpa.edit(user);
            } catch (Exception ex) {
                Logger.getLogger(panelRegistroUsuarios.class.getName()).log(Level.SEVERE, null, ex);

                switch (columna) {
                    case 0:
                        user.setNombres((String) anterior);
                        break;
                    case 1:
                        user.setApellidos((String) anterior);
                        break;
                    case 4:
                        user.setEmail((String) anterior);
                        break;    
                }

            }

        }
        
    }
    
}
