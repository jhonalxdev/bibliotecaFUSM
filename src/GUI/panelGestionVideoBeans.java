/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package GUI;


import DAO.PrestamoBeamJpaController;
import DAO.VideoBeamJpaController;
import DAO.exceptions.NonexistentEntityException;
import bibliotecafusm.Usuario;
import bibliotecafusm.VideoBeam;

import java.awt.Color;
import java.awt.Rectangle;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.persistence.EntityManagerFactory;
import javax.persistence.Persistence;
import javax.persistence.RollbackException;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.JSpinner;
import javax.swing.JSpinner.DefaultEditor;
import static javax.swing.SwingConstants.CENTER;
import javax.swing.border.TitledBorder;
import javax.swing.table.AbstractTableModel;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.TableColumnModel;

/**
 *
 * @author Jhon Alex
 */
public class panelGestionVideoBeans extends javax.swing.JPanel{

    
    private VideoBeamJpaController proyectoresjpa;      
    private List<VideoBeam> listaProyectoresdelaBD;
    
    private  PrestamoBeamJpaController prestamoBeamsjpa;
    
    public panelGestionVideoBeans() {
        
        initComponents();
    

        
 
        // instancia objeto que va guardar la info a la base de datos :: usuariojpa
        EntityManagerFactory emf = Persistence.createEntityManagerFactory("BibliotecaFUSMPU");
        proyectoresjpa = new VideoBeamJpaController(emf);
        prestamoBeamsjpa = new PrestamoBeamJpaController(emf);
        
         // agrega la lista de proyectores de la base de datos a mi atributo lista
        // si la base de datos esta vacia el valor asignado es null
        listaProyectoresdelaBD = proyectoresjpa.findVideoBeamEntities(); 
        
        

        // asignacion de modelo a tabla
        miTabla.setModel(new ModeloTabla());
        
        organizatamseccionestabla();
        
        // contador de la interfaz
        jLabel17.setText(""+proyectoresjpa.getVideoBeamCount());
        

        lblupdateicon.setVisible(false);
    }
    
    
    public void organizatamseccionestabla(){
           TableColumnModel cModel = miTabla.getColumnModel();
        
        cModel.getColumn(0).setPreferredWidth(100);   
        cModel.getColumn(1).setPreferredWidth(200);   
        cModel.getColumn(2).setPreferredWidth(200);   
        cModel.getColumn(3).setPreferredWidth(150);
        cModel.getColumn(4).setPreferredWidth(150);
        cModel.getColumn(5).setPreferredWidth(150);
        
        DefaultTableCellRenderer tcr = new DefaultTableCellRenderer();
        tcr.setHorizontalAlignment(CENTER);
        miTabla.getColumnModel().getColumn(0).setCellRenderer(tcr);
    
    }
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        lblupdateicon = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        txtmarca = new javax.swing.JTextField();
        txtmodelo = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        lblcodestu = new javax.swing.JLabel();
        txtserialnum = new javax.swing.JTextField();
        txtinventarionum = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jComboBox3 = new javax.swing.JComboBox<>();
        jLabel2 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jButton7 = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        jButton8 = new javax.swing.JButton();
        jTextField1 = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        miTabla = new javax.swing.JTable();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jLabel9 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        setOpaque(false);
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/res/projector.png"))); // NOI18N
        add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 180, 90, 90));

        lblupdateicon.setIcon(new javax.swing.ImageIcon(getClass().getResource("/res/updateicon.png"))); // NOI18N
        lblupdateicon.setText("          ");
        add(lblupdateicon, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, 40, -1));

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Registrar Video Beam", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 12), java.awt.Color.blue)); // NOI18N
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        txtmarca.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jPanel1.add(txtmarca, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 50, 190, -1));

        txtmodelo.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jPanel1.add(txtmodelo, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 50, 190, -1));

        jLabel3.setText("Marca *");
        jPanel1.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 30, 120, -1));

        jLabel4.setText("Modelo *");
        jPanel1.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 30, 80, -1));

        jLabel7.setText("S/N *");
        jPanel1.add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(540, 30, 60, -1));

        lblcodestu.setText("Cod. Inventario *");
        jPanel1.add(lblcodestu, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 30, 110, -1));

        txtserialnum.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jPanel1.add(txtserialnum, new org.netbeans.lib.awtextra.AbsoluteConstraints(540, 50, 100, -1));

        txtinventarionum.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jPanel1.add(txtinventarionum, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 50, 110, -1));

        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/res/addproyector.png"))); // NOI18N
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(900, 30, 90, 50));

        jButton2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/res/mini_cleanform.png"))); // NOI18N
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton2, new org.netbeans.lib.awtextra.AbsoluteConstraints(790, 30, 92, 50));

        jLabel12.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel12.setText("Registrar");
        jPanel1.add(jLabel12, new org.netbeans.lib.awtextra.AbsoluteConstraints(904, 80, 80, -1));

        jLabel13.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel13.setText("Limpiar Form");
        jPanel1.add(jLabel13, new org.netbeans.lib.awtextra.AbsoluteConstraints(790, 80, 90, -1));

        jComboBox3.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Disponible", "No disponible" }));
        jPanel1.add(jComboBox3, new org.netbeans.lib.awtextra.AbsoluteConstraints(660, 50, 110, 20));

        jLabel2.setText("Disponibilidad ");
        jPanel1.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(660, 30, -1, -1));

        jLabel5.setText("Observaciones ");
        jPanel1.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 80, 90, 10));

        jButton7.setIcon(new javax.swing.ImageIcon(getClass().getResource("/res/up.png"))); // NOI18N
        jButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton7ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton7, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 100, 30, 20));

        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jScrollPane3.setViewportView(jTextArea1);

        jPanel1.add(jScrollPane3, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 100, 480, 50));

        jButton8.setIcon(new javax.swing.ImageIcon(getClass().getResource("/res/down.png"))); // NOI18N
        jButton8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton8ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton8, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 120, 30, 20));

        jTextField1.setEditable(false);
        jTextField1.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jTextField1.setForeground(new java.awt.Color(51, 51, 255));
        jTextField1.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        jTextField1.setText("1");
        jPanel1.add(jTextField1, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 100, 60, 40));

        jLabel8.setText("Proyector  No.");
        jPanel1.add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(53, 80, 90, -1));

        add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 20, 1010, 160));

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "                 Video Beams Registrados", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 12), java.awt.Color.blue)); // NOI18N
        jPanel2.setLayout(null);

        miTabla.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        miTabla.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_OFF);
        jScrollPane2.setViewportView(miTabla);

        jPanel2.add(jScrollPane2);
        jScrollPane2.setBounds(20, 70, 960, 180);

        jButton3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/res/editbook.png"))); // NOI18N
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });
        jPanel2.add(jButton3);
        jButton3.setBounds(747, 10, 90, 40);

        jButton4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/res/deleteproyect.png"))); // NOI18N
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });
        jPanel2.add(jButton4);
        jButton4.setBounds(850, 10, 90, 40);

        jLabel9.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel9.setText("Editar");
        jPanel2.add(jLabel9);
        jLabel9.setBounds(750, 50, 80, 14);

        jLabel14.setText("Eliminar");
        jPanel2.add(jLabel14);
        jLabel14.setBounds(880, 50, 50, 14);

        jLabel17.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel17.setForeground(new java.awt.Color(255, 102, 102));
        jPanel2.add(jLabel17);
        jLabel17.setBounds(79, 17, 84, 37);

        add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 210, 1010, 270));

        jLabel6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/res/pattern_texture1186.jpg"))); // NOI18N
        jLabel6.setText("                       ");
        add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1050, 500));
    }// </editor-fold>//GEN-END:initComponents

      
 // saber si las campos del formulario estan en blanco
 public boolean casillasenBlanco(){
     boolean salida = false;
     
     if(txtmarca.getText().equals("".trim())){
         salida = true;
     }
     if(txtmodelo.getText().equals("".trim())){
         salida = true;
     }

     if(txtserialnum.getText().equals("".trim())){
         salida = true;
     }
     
     if(txtinventarionum.getText().equals("".trim())){
         salida = true;
     }

     return salida;
 }
 
 
 VideoBeam proyectorEncontrado = new VideoBeam();  
 
 // EDITAR // REGISTRAR
 
    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed

        
        if (casillasenBlanco()) {
            
           JOptionPane.showMessageDialog(null, "Debe diligenciar todos campos obligatorios");
        }else{
 

    if(jLabel12.getText().equals("Confirmar")){
       
         // CONFIRMAR ACTUALIZAR VIDEO BEAM 
 
     try { 
         
         
         //---
         
         proyectorEncontrado.setMarca(txtmarca.getText().trim());
         proyectorEncontrado.setSerialNum(txtserialnum.getText().trim());
         proyectorEncontrado.setModelo(txtmodelo.getText().trim());
         proyectorEncontrado.setInventarioNum(txtinventarionum.getText().trim());
         proyectorEncontrado.setDisponibilidad(jComboBox3.getSelectedItem().toString());
         proyectorEncontrado.setObservaciones(jTextArea1.getText());
         
         
         int proyectnum = Integer.parseInt(jTextField1.getText().trim());
         proyectorEncontrado.setProyectornum(proyectnum);
         

         //---

         
        // actuliza informacion del proyector
          proyectoresjpa.edit(proyectorEncontrado);
          

          // Notificacion usuario actualizado
      JOptionPane.showMessageDialog(null, "Informacion del proyector actualizada con Exito");
       setNormalPanelSuperior();
      
 
                limpiarForm();
                
             // update al final de la edicion
                updateTable();      
                
        //--- seleccion de fila editada------------------------------
        
        int selc =-1;
        
         for (int i = 0; i < listaProyectoresdelaBD.size(); i++) {
            if(listaProyectoresdelaBD.get(i).getSerialNum().equals(proyectorEncontrado.getSerialNum())){
                selc = i;
                break;
            }
        }

        miTabla.getSelectionModel().setSelectionInterval (selc, selc) ;
        
        Rectangle r = miTabla.getCellRect( selc, 0, true);

        // Mueve el scroll para que el rectangulo sea visible *
        miTabla.scrollRectToVisible (r);
        
        //----------------------------------------------------------------
                
                
       

                activosBntnsPanelinferior(true);
          
          
            

      } catch (NonexistentEntityException ex) {
          //Logger.getLogger(panel1.class.getName()).log(Level.SEVERE, null, ex);
      } catch (Exception ex) {
            Logger.getLogger(panelGestionVideoBeans.class.getName()).log(Level.SEVERE, null, ex);
      }
     
     
                
     } else{    

        // REGISTRAR VIDEO BEAM 
        
        try {

            
            String serialnum = txtserialnum.getText().trim();
            
            String marca = txtmarca.getText().trim();
            String modelo = txtmodelo.getText().trim();
            String inventarionum = txtinventarionum.getText().trim();

            String dispo = jComboBox3.getSelectedItem().toString();
            
            String observaciones = jTextArea1.getText();
            

            int proyectnum = Integer.parseInt(jTextField1.getText().trim());

            // crea objeto VideoBeam apartir de la info ingresada en la ventana
            //String serialNum, String marca, String modelo, String inventarioNum, String disponibilidad,int proyecnum
            VideoBeam nuevoVideoBeam = new VideoBeam(serialnum, marca, modelo, inventarionum, dispo,observaciones, proyectnum);

            
            boolean cond = false;
            for (int i = 0; i < listaProyectoresdelaBD.size(); i++) {
                if(listaProyectoresdelaBD.get(i).getProyectornum()==proyectnum){
                    cond = true;
                }
            }
            
            
            if (cond) {
                JOptionPane.showMessageDialog(null, "Ya se encuentra registrado un proyector con el numero "+proyectnum);
            }else{
                // agrega nuevo usuario a la base de datos
                proyectoresjpa.create(nuevoVideoBeam);
                JOptionPane.showMessageDialog(null, "Nuevo proyector registrado con Exito");
                limpiarForm();
            
                updateTable();
            }

            
        } catch (NumberFormatException nfx) {           
            JOptionPane.showMessageDialog(null, "Error, Debes ingresar un numero valido");
            // Logger.getLogger(panel1.class.getName()).log(Level.SEVERE, null, nfx);
        
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(null, "Error, El proyector indicado ya se ecuentra registrado");
        
           //Logger.getLogger(panelGestionVideoBeans.class.getName()).log(Level.SEVERE, null, ex);
        }

      } // fin else  
       
      }
    }//GEN-LAST:event_jButton1ActionPerformed

    
    public void updateTable(){
              
        // ACTUALIZACION DE LA TABLA
            // volver asignarle el nuevo valor de la lista de la base de datos
            listaProyectoresdelaBD = proyectoresjpa.findVideoBeamEntities();

            // metodo es diferente ya no es setModel
            // actualiza nuestro modelo actual de la tabla
            ((AbstractTableModel) miTabla.getModel()).fireTableDataChanged();
            
            
            jLabel17.setText(""+proyectoresjpa.getVideoBeamCount());
    }
    
    
    
    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        
        if(jLabel13.getText().equals("Cancelar")){
                   
             setNormalPanelSuperior();
             txtinventarionum.setEnabled(true);
        }

        limpiarForm ();
    }//GEN-LAST:event_jButton2ActionPerformed

    
    public void setNormalPanelSuperior (){
         jPanel1.setBackground(jPanel2.getBackground());
            
            TitledBorder titulo = new TitledBorder(  "Registrar Video Beam" ) ;
            titulo.setTitleColor(Color.BLUE);           
            jPanel1.setBorder( titulo);
            
            lblupdateicon.setVisible(false);

           // reactivar panel inferior
            activosBntnsPanelinferior (true);

             txtinventarionum.setToolTipText("");
            
   // iconos normales              
        //Añadimos la imagen al boton agregar que ahora sera actulizar
            ImageIcon confirm = new ImageIcon(getClass().getResource("/res/addproyector.png"));
            jButton1.setIcon(confirm );
        // cambiamos texto de la etiqueta 
            jLabel12.setText("Registrar");

        //Añadimos la imagen al boton limpiar que ahora sera cancelar
            ImageIcon cancel = new ImageIcon(getClass().getResource("/res/mini_cleanform.png"));
            jButton2.setIcon(cancel);
        // cambiamos texto de la etiqueta 
            jLabel13.setText("Limpiar Form");
    }
    
    
  // EDITAR
    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed

        if (miTabla.getSelectedRow() == -1) {
            JOptionPane.showMessageDialog(null, "Debes seleecionar un Video Beam a editar");
        
        } else {
   
   
     String id =String.valueOf(miTabla.getModel().getValueAt(miTabla.getSelectedRow(),3));

     proyectorEncontrado = proyectoresjpa.findVideoBeam(id); 
    
     
     pasarInfoPanelUpdate (proyectorEncontrado);
     

        jPanel1.setBorder( new TitledBorder( "         Actualizar Informacion Video Beam" ) );
        lblupdateicon.setVisible(true);
        jPanel1.setBackground(Color.lightGray);
        
        
       // desactiva txt identificador - este valor no es editable
       txtserialnum.setEnabled(false);
       // asignando tooltip text
       txtserialnum.setToolTipText("Para editar este valor debe eliminar registro y crearlo nuevamente");
        
        // desactivando elementos panel inferior
        activosBntnsPanelinferior (false );
        
        
        //Añadimos la imagen al boton agregar que ahora sera actulizar
            ImageIcon confirm = new ImageIcon(getClass().getResource("/res/okproyector.png"));
            jButton1.setIcon(confirm );
        // cambiamos texto de la etiqueta 
            jLabel12.setText("Confirmar");
            
            
            
        //Añadimos la imagen al boton limpiar que ahora sera cancelar
            ImageIcon cancel = new ImageIcon(getClass().getResource("/res/cancelarmini.png"));
            jButton2.setIcon(cancel);
        // cambiamos texto de la etiqueta 
            jLabel13.setText("Cancelar");
            
        } // fin else   
    }//GEN-LAST:event_jButton3ActionPerformed

    
    public void pasarInfoPanelUpdate (VideoBeam proyect){

        txtmarca.setText(proyect.getMarca());
        txtmodelo.setText(proyect.getModelo());
        txtinventarionum.setText(proyect.getInventarioNum());
        txtserialnum.setText(proyect.getSerialNum());
        jTextField1.setText(""+proyect.getProyectornum());
        
        jTextArea1.setText(proyect.getObservaciones());
        
        jComboBox3.setSelectedItem(proyect.getDisponibilidad());
        
        jButton7.setEnabled(false);
        jButton8.setEnabled(false);

    }
    
    
    
    public void activosBntnsPanelinferior (Boolean val ){

        jButton3.setEnabled(val);       
        jButton4.setEnabled(val);
        miTabla.setEnabled(val);      
    }
    
    
    
    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed

   //aca capturo el id en la pos 2 de la celda seleccionada 

   if(miTabla.getSelectedRow()==-1){
       JOptionPane.showMessageDialog(null,"Debes seleecionar un proyector a eliminar");
       
   }else{

     String id =String.valueOf(miTabla.getModel().getValueAt(miTabla.getSelectedRow(),3));
     
     String num =String.valueOf(miTabla.getModel().getValueAt(miTabla.getSelectedRow(),0));
     String marca =String.valueOf(miTabla.getModel().getValueAt(miTabla.getSelectedRow(),1));
     
     
        try {
            
            int dialogButton = JOptionPane.YES_NO_OPTION;
            
    
            int opc = JOptionPane.showConfirmDialog (null, "Esto causara la eliminacion de los prestamos sobre este proyector \n"
                    + "               ¿Esta seguro de eliminar el VideoBeam "+num+" "+marca+" ?",
                                                           "AVISO", dialogButton);

            if(opc == 0) {
                
               
                   // si el proyector ha sido prestado eliminelo de la lista prestamolibros
     
                 if(!prestamoBeamsjpa.findPrestamoBeamEntities().isEmpty()){   
                    
                    if (!prestamoBeamsjpa.findPrestamoBeam(id).equals(null)) {
                        prestamoBeamsjpa.destroy(id); 
                        
                        System.out.println("elimino prestamo del VidBEam");
                    }
                 }
                    
                proyectoresjpa.destroy(id);    
          
       
                updateTable();
                JOptionPane.showMessageDialog(null,"Proyector eliminado");
            }

        } catch (NonexistentEntityException ex) {
            Logger.getLogger(panelGestionVideoBeans.class.getName()).log(Level.SEVERE, null, ex);
        }

    }
   
    }//GEN-LAST:event_jButton4ActionPerformed

    
    // btns aumento - decremento
    
    private void jButton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton7ActionPerformed
      int num = Integer.parseInt(jTextField1.getText());
        if(num<50){
            num++;
            jTextField1.setText(""+num);
        }
    }//GEN-LAST:event_jButton7ActionPerformed

    private void jButton8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton8ActionPerformed
      int num = Integer.parseInt(jTextField1.getText());
        if(num>1){
            num--;
            jTextField1.setText(""+num);
        }
    }//GEN-LAST:event_jButton8ActionPerformed

    

    
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton7;
    private javax.swing.JButton jButton8;
    private javax.swing.JComboBox<String> jComboBox3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JLabel lblcodestu;
    private javax.swing.JLabel lblupdateicon;
    private javax.swing.JTable miTabla;
    private javax.swing.JTextField txtinventarionum;
    private javax.swing.JTextField txtmarca;
    private javax.swing.JTextField txtmodelo;
    private javax.swing.JTextField txtserialnum;
    // End of variables declaration//GEN-END:variables


    public void limpiarForm() {
        txtmarca.setText("");
        txtmodelo.setText("");
        txtinventarionum.setText("");
        txtserialnum.setText("");

        jTextArea1.setText("");
        jTextField1.setText("1");   
     
        txtserialnum.setEnabled(true);
        jComboBox3.setSelectedItem("Disponible");
        
        jButton7.setEnabled(true);
        jButton8.setEnabled(true);
    }


   // CREANDO MODELO TABLA 

    private class ModeloTabla extends AbstractTableModel { 


        // cuantas filas tiene la tabla en la base
        @Override
        public int getRowCount() {
            // devuelve la cant objetos - tantos objetos tenga la lista
            return listaProyectoresdelaBD.size();
        }

        // cuantas columnas tiene la tabla en la base
        @Override
        public int getColumnCount() {
            // cuatos items va manejar la lista
            return 6;
        }

        // la informacion de la fila y la informacion de las columnas
        @Override
        public Object getValueAt(int fila, int columna) {

            VideoBeam nuevoProyector = listaProyectoresdelaBD.get(fila);

            Object salida = "";

            switch (columna) {
                case 0:
                    
                    salida = nuevoProyector.getProyectornum();
                    break;

                case 1:
                    salida = nuevoProyector.getMarca();
                    break;

                case 2:
                    salida = nuevoProyector.getModelo();
                    break;
                    
                case 3:
                    salida = nuevoProyector.getSerialNum();
                    break;

                case 4:
                    salida = nuevoProyector.getInventarioNum();
                    break;                   
                case 5:
                    salida = nuevoProyector.getDisponibilidad();
                    break;                   
            }

            return salida;

        }

        // nombres de las columnas
        @Override
        public String getColumnName(int columna) {

            switch (columna) {
                case 0:
                    return "PROYECTOR";

                case 1:
                    return "MARCA";

                case 2:
                    return "MODELO";
                    
                case 3:
                    return "S/N";

                case 4:
                    return "INVENTARIO";   
                    
                case 5:
                    return "DISPONIBILIDAD";    
            }

            return "";


        }
        
    }
    
}
